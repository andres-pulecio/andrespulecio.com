name: Destroy infrastructure on AWS

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ["deploy/remove/**"]
  pull_request:
    branches: [main]
    paths: ["deploy/remove/**"]

jobs:
  destroy-infra-on-AWS:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::677615602730:role/github-actions
          aws-region: us-east-1
          mask-aws-account-id: 'true'

      - name: Fetch Resource IDs
        id: fetch-ids
        run: |
          VPC_ID=$(aws ec2 describe-vpcs --filters "Name=tag:Name,Values=my-portfolio" --query "Vpcs[*].VpcId" --output text)
          IGW_ID=$(aws ec2 describe-internet-gateways --filters "Name=tag:Name,Values=my-portfolio" --query "InternetGateways[*].InternetGatewayId" --output text)
          SUBNET_1_ID=$(aws ec2 describe-subnets --filters "Name=tag:Name,Values=my-portfolio-1" --query "Subnets[*].SubnetId" --output text)
          SUBNET_2_ID=$(aws ec2 describe-subnets --filters "Name=tag:Name,Values=my-portfolio-2" --query "Subnets[*].SubnetId" --output text)
          SG_ID=$(aws ec2 describe-security-groups --filters "Name=tag:Name,Values=my-portfolio" --query "SecurityGroups[*].GroupId" --output text)
          CLUSTER_ARN=$(aws ecs list-clusters --query "clusterArns[?contains(@, 'my-portfolio')]" --output text)

          echo "VPC_ID=$VPC_ID" >> $GITHUB_ENV
          echo "IGW_ID=$IGW_ID" >> $GITHUB_ENV
          echo "SUBNET_1_ID=$SUBNET_1_ID" >> $GITHUB_ENV
          echo "SUBNET_2_ID=$SUBNET_2_ID" >> $GITHUB_ENV
          echo "SG_ID=$SG_ID" >> $GITHUB_ENV
          echo "CLUSTER_ARN=$CLUSTER_ARN" >> $GITHUB_ENV

      - name: Delete Resources
        run: |
          # Delete Load Balancer resources
          LB_ARN=$(aws elbv2 describe-load-balancers --names my-portfolio --query "LoadBalancers[*].LoadBalancerArn" --output text)
          TG_ARN=$(aws elbv2 describe-target-groups --names my-portfolio --query "TargetGroups[*].TargetGroupArn" --output text)
          LISTENER_ARN=$(aws elbv2 describe-listeners --load-balancer-arn $LB_ARN --query "Listeners[*].ListenerArn" --output text)

          aws elbv2 delete-listener --listener-arn $LISTENER_ARN
          aws elbv2 delete-target-group --target-group-arn $TG_ARN
          aws elbv2 delete-load-balancer --load-balancer-arn $LB_ARN

          # Delete ECS service
          SERVICE_NAME=$(aws ecs describe-services --cluster my-portfolio --services my-portfolio --query "services[*].serviceName" --output text)
          aws ecs update-service --cluster my-portfolio --service $SERVICE_NAME --desired-count 0
          aws ecs delete-service --cluster my-portfolio --service $SERVICE_NAME

          # Stop ECS tasks
          TASK_ARNS=$(aws ecs list-tasks --cluster my-portfolio --query "taskArns[*]" --output text)
          for TASK_ARN in $TASK_ARNS; do
            aws ecs stop-task --cluster my-portfolio --task $TASK_ARN
          done

          # Delete ECS task definition
          TASK_DEF_ARN=$(aws ecs describe-task-definition --task-definition my-portfolio --query "taskDefinition.taskDefinitionArn" --output text)
          aws ecs deregister-task-definition --task-definition $TASK_DEF_ARN

          # Delete ECS cluster
          aws ecs delete-cluster --cluster ${{ env.CLUSTER_ARN }}

          # Delete Security Group
          aws ec2 delete-security-group --group-id ${{ env.SG_ID }}

          # Delete Subnets
          aws ec2 delete-subnet --subnet-id ${{ env.SUBNET_1_ID }}
          aws ec2 delete-subnet --subnet-id ${{ env.SUBNET_2_ID }}

          # Detach and delete Internet Gateway
          aws ec2 detach-internet-gateway --internet-gateway-id ${{ env.IGW_ID }} --vpc-id ${{ env.VPC_ID }}
          aws ec2 delete-internet-gateway --internet-gateway-id ${{ env.IGW_ID }}

          # Delete the VPC
          aws ec2 delete-vpc --vpc-id ${{ env.VPC_ID }}
